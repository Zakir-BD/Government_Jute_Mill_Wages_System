
import Reports.LabourMasterData;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author B8
 */
public class Labour_info extends javax.swing.JFrame {
    String Month_S, Year, ID,Name,NID,Department,sBasic,sMedicalA,sTiffinA,sTransportA,sWorkingH,sOvertime,sLeaveH,sPFL,sRevenueS,sUnionF;

    /**
     * Creates new form Labour_info
     */
    public Labour_info() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNID = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMedicalA = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTiffinA = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTransportA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cmbDepartment = new javax.swing.JComboBox<>();
        txtBasic = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        txtRevenueS = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtUnionF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        btnSave1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnClearAll = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        btnSave.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.setBorder(new javax.swing.border.MatteBorder(null));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        jPanel2.setBackground(new java.awt.Color(171, 183, 183));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 102, 0)), "Personal Data & Alowance", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(0, 102, 0))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtName.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtName.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("NID");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtNID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtNID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtNID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNIDKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Basic");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Medical Alow.");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtMedicalA.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtMedicalA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtMedicalA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalAActionPerformed(evt);
            }
        });
        txtMedicalA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMedicalAKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Tiffin Alow.");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTiffinA.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTiffinA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTiffinA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTiffinAActionPerformed(evt);
            }
        });
        txtTiffinA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTiffinAKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Transport Alow.");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtTransportA.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTransportA.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtTransportA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTransportAActionPerformed(evt);
            }
        });
        txtTransportA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTransportAKeyPressed(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(0, 102, 0));
        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("ID");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Department");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cmbDepartment.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        cmbDepartment.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "----Selecet----", "Jute", "Batching", "Preparing", "Spening", "Winding", "Biming", "Weaving", "Finishing", "Mechanical", "Electric", "Workshop", "Cvil" }));
        cmbDepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDepartmentActionPerformed(evt);
            }
        });
        cmbDepartment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbDepartmentKeyPressed(evt);
            }
        });

        txtBasic.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtBasic.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txtBasic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBasicActionPerformed(evt);
            }
        });
        txtBasic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBasicKeyPressed(evt);
            }
        });

        txtID.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIDFocusLost(evt);
            }
        });
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        txtRevenueS.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtRevenueS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRevenueSKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Revenue");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtUnionF.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtUnionF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUnionFKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Union Fee");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbDepartment, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtBasic, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTiffinA)
                            .addComponent(txtTransportA)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRevenueS)
                            .addComponent(txtUnionF)
                            .addComponent(txtMedicalA))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBasic, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRevenueS, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUnionF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMedicalA, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTiffinA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTransportA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnSave1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnSave1.setText("Save");
        btnSave1.setBorder(new javax.swing.border.MatteBorder(null));
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });
        btnSave1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSave1KeyPressed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(108, 122, 137));

        btnClearAll.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnClearAll.setText("ClearAll");
        btnClearAll.setBorder(new javax.swing.border.MatteBorder(null));
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });
        btnClearAll.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnClearAllKeyPressed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 0, 51));
        btnDelete.setText("Delete");
        btnDelete.setBorder(new javax.swing.border.MatteBorder(null));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        btnDelete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDeleteKeyPressed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(new javax.swing.border.MatteBorder(null));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        btnUpdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnUpdateKeyPressed(evt);
            }
        });

        btnShow.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnShow.setText("Show");
        btnShow.setBorder(new javax.swing.border.MatteBorder(null));
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });
        btnShow.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnShowKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jButton1.setText("Total Labour");
        jButton1.setBorder(new javax.swing.border.MatteBorder(null));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnShow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnClearAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnSave1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtMedicalAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalAActionPerformed

    private void txtTiffinAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTiffinAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTiffinAActionPerformed

    private void txtTransportAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTransportAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTransportAActionPerformed

    private void cmbDepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDepartmentActionPerformed
        basic();
    }//GEN-LAST:event_cmbDepartmentActionPerformed

    private void txtBasicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBasicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBasicActionPerformed

    private void txtBasicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBasicKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtRevenueS.requestFocus();
        }
    }//GEN-LAST:event_txtBasicKeyPressed

    private void txtIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIDFocusLost
        getAllRecordShow();
    }//GEN-LAST:event_txtIDFocusLost

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
//                getAllRecordShow();
//                txtName.requestFocus();
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        clear();
        txtID.requestFocus();
    }//GEN-LAST:event_btnClearAllActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        getAllRecordDelete();
        txtID.requestFocus();
        clear();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        getAllRecordUpdate();
//        getAllRecordUpdateHistory();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        getAllRecordShow();
        txtID.requestFocus();
    }//GEN-LAST:event_btnShowActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        LabourMasterData labour = new LabourMasterData();
        labour.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        getAllRecordSave();
        //        getAllRecordUpdateHistory();
        txtName.requestFocus();
        //        if(txtName.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Name");
            //            txtName.requestFocus();
            //        }
        //        if(txtNID.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter NID");
            //            txtNID.requestFocus();
            //        }
        //        if(txtBasic.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Basic");
            //            txtBasic.requestFocus();
            //        }
        //        if(txtMedicalA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Medical Alowance");
            //            txtMedicalA.requestFocus();
            //        }
        //        if(txtTiffinA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Tiffin Alowance");
            //            txtTiffinA.requestFocus();
            //        }
        //        if(txtTransportA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Transport Alowance");
            //            txtTransportA.requestFocus();
            //        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        getAllRecordSave();
        //        getAllRecordUpdateHistory();
        txtName.requestFocus();
        //        if(txtName.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Name");
            //            txtName.requestFocus();
            //        }
        //        if(txtNID.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter NID");
            //            txtNID.requestFocus();
            //        }
        //        if(txtBasic.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Basic");
            //            txtBasic.requestFocus();
            //        }
        //        if(txtMedicalA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Medical Alowance");
            //            txtMedicalA.requestFocus();
            //        }
        //        if(txtTiffinA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Tiffin Alowance");
            //            txtTiffinA.requestFocus();
            //        }
        //        if(txtTransportA.getText().isEmpty()){
            //            JOptionPane.showMessageDialog(rootPane, "Please Enter Transport Alowance");
            //            txtTransportA.requestFocus();
            //        }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtNID.requestFocus();
        }
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtNIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNIDKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            cmbDepartment.requestFocus();
        }
        
    }//GEN-LAST:event_txtNIDKeyPressed

    private void cmbDepartmentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbDepartmentKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtBasic.requestFocus();
        }
    }//GEN-LAST:event_cmbDepartmentKeyPressed

    private void txtRevenueSKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRevenueSKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtUnionF.requestFocus();
        }
    }//GEN-LAST:event_txtRevenueSKeyPressed

    private void txtUnionFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnionFKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtMedicalA.requestFocus();
        }
    }//GEN-LAST:event_txtUnionFKeyPressed

    private void txtMedicalAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMedicalAKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtTiffinA.requestFocus();
        }
    }//GEN-LAST:event_txtMedicalAKeyPressed

    private void txtTiffinAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiffinAKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtTransportA.requestFocus();
        }
    }//GEN-LAST:event_txtTiffinAKeyPressed

    private void txtTransportAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTransportAKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            btnSave1.requestFocus();
        }
    }//GEN-LAST:event_txtTransportAKeyPressed

    private void btnSave1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSave1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            getAllRecordSave();
            txtName.requestFocus();
        }
    }//GEN-LAST:event_btnSave1KeyPressed

    private void btnShowKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnShowKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            getAllRecordShow();
            txtID.requestFocus();
        }
    }//GEN-LAST:event_btnShowKeyPressed

    private void btnUpdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnUpdateKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER) {
            getAllRecordUpdate();
        }
    }//GEN-LAST:event_btnUpdateKeyPressed

    private void btnDeleteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDeleteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            getAllRecordDelete();
            txtID.requestFocus();
            clear();
        }
    }//GEN-LAST:event_btnDeleteKeyPressed

    private void btnClearAllKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnClearAllKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            clear();
            txtID.requestFocus();
        }
    }//GEN-LAST:event_btnClearAllKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            LabourMasterData labour = new LabourMasterData();
            labour.setVisible(true);
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER) {
            txtName.requestFocus();
        }
    }//GEN-LAST:event_txtIDKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Labour_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Labour_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Labour_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Labour_info.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Labour_info().setVisible(true);
            }
        });
    }
    
    private void getAllRecordSave() {
//    String Month_S, Year, ID,Name,NID,Department,sBasic,sMedicalA,sTiffinA,sTransportA,sWorkingH,sOvertime,sLeaveH,sPFL,sRevenueS,sUnionF;
//    Double dBasic,dMedicalA,dTiffinA,dTransportA,dWorkingH,dOvertime,dLeaveH,dPFL,dRevenueS,dUnionF;
 
       
//        ID = txtID.getText();
        Name = txtName.getText();
        NID = txtNID.getText();
        Department = cmbDepartment.getSelectedItem().toString();
        sBasic = txtBasic.getText();
        sRevenueS = txtUnionF.getText();
        sUnionF = txtUnionF.getText();
        sMedicalA = txtMedicalA.getText();
        sTiffinA = txtTiffinA.getText();
        sTransportA = txtTransportA.getText();
      
        Connection con = null;
        Statement stmt = null;
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            int count = 0;
            
            count = stmt.executeUpdate("insert into labour_info(Name,NID,Department,Basic,UnionF,RevenueS,MedicalA,TiffinA,TransportA)"
                    + " values('" + Name + "','" + NID + "','" + Department + "','" + sBasic + "','" + sUnionF + "','" + sRevenueS + "','" + sMedicalA + "','" + sTiffinA + "','" + sTransportA + "')");

            if (count > 0) {
//                System.out.println("inserted successfully");
                JOptionPane.showMessageDialog(this, "inserted successfully");
                clear();
//                txtName.requestFocus();
            } else {
                JOptionPane.showMessageDialog(this, "insertion failed", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbDepartment;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField txtBasic;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMedicalA;
    private javax.swing.JTextField txtNID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtRevenueS;
    private javax.swing.JTextField txtTiffinA;
    private javax.swing.JTextField txtTransportA;
    private javax.swing.JTextField txtUnionF;
    // End of variables declaration//GEN-END:variables
private void basic() {
        Department = cmbDepartment.getSelectedItem().toString();
        if (Department == "Jute") {
            txtBasic.setText("4150");
        } else if (Department == "Batching") {
            txtBasic.setText("4150");
        } else if (Department == "Preparing") {
            txtBasic.setText("4200");
        } else if (Department == "Spening") {
            txtBasic.setText("4350");
        } else if (Department == "Winding") {
            txtBasic.setText("4150");
        } else if (Department == "Biming") {
            txtBasic.setText("4150");
        } else if (Department == "Weaving") {
            txtBasic.setText("4150");
        } else if (Department == "Finishing") {
            txtBasic.setText("4275");
        } else if (Department == "Mechanical") {
            txtBasic.setText("4150");
        } else if (Department == "Electric") {
            txtBasic.setText("4150");
        } else if (Department == "Workshop") {
            txtBasic.setText("4150");
        } else if (Department == "Cvil") {
            txtBasic.setText("4150");
        } else if (Department == "----Selecet----") {
            txtBasic.setText("0");
        }
    }

private void getAllRecordShow(){
        ID = txtID.getText();
        Name = txtName.getText();
        NID = txtNID.getText();
        Department = cmbDepartment.getSelectedItem().toString();
        sBasic = txtBasic.getText();
        sRevenueS = txtRevenueS.getText();
        sUnionF = txtUnionF.getText();
        sMedicalA = txtMedicalA.getText();
        sTiffinA = txtTiffinA.getText();
        sTransportA = txtTransportA.getText();

        Connection con = null;
        Statement stmt = null;
        ResultSet rs = null;
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            
            rs = stmt.executeQuery("select Name,NID,Department,Basic,UnionF,RevenueS,MedicalA,TiffinA,TransportA from labour_info where id= '" + ID + "' ");
            int count = 0;
            while (rs.next()) {
                txtName.setText(rs.getString("Name"));
                txtNID.setText(rs.getString("NID"));
                cmbDepartment.setSelectedItem(rs.getString("Department"));
                txtBasic.setText(rs.getString("Basic"));
                txtRevenueS.setText(rs.getString("RevenueS"));
                txtUnionF.setText(rs.getString("UnionF"));
                txtMedicalA.setText(rs.getString("MedicalA"));
                txtTiffinA.setText(rs.getString("TiffinA"));
                txtTransportA.setText(rs.getString("TransportA"));
                
                count++;
            }
            if (count == 0) {
                JOptionPane.showMessageDialog(rootPane, "No such record. Enter New Record");
                clear();
                
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                //Close the connection and statement object
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
}
public void clear() {
    txtID.setText("");
    txtName.setText("");
    txtNID.setText("");
    cmbDepartment.setSelectedIndex(0);
    txtBasic.setText("");
    txtRevenueS.setText("");
    txtUnionF.setText("");
    txtMedicalA.setText("");
    txtTiffinA.setText("");
    txtTransportA.setText("");
}

private void getAllRecordDelete(){
ID = txtID.getText();
        Connection con = null;
        Statement stmt = null;
        try {
            con = DBConnection.getDBConnection();
            stmt = con.createStatement();
            int count = 0;
            count = stmt.executeUpdate("delete from labour_info where id='" + ID + "' ");
            if (count > 0) {
                JOptionPane.showMessageDialog(this, "Record Deleted");
            } else {
                JOptionPane.showMessageDialog(this, "No Record Found", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
}
private void getAllRecordUpdate(){
        ID = txtID.getText();
        Name = txtName.getText();
        NID = txtNID.getText();
        Department = cmbDepartment.getSelectedItem().toString();
        sBasic = txtBasic.getText();
        sRevenueS = txtRevenueS.getText();
        sUnionF = txtUnionF.getText();
        sMedicalA = txtMedicalA.getText();
        sTiffinA = txtTiffinA.getText();
        sTransportA = txtTransportA.getText();
        

        Connection con = null;
        Statement stmt = null;
        try {
            //Create the connection object
            con = DBConnection.getDBConnection();
            //Create the Statement object
            stmt = con.createStatement();
            int count = 0;
            //Execute the query
             // String ID, Name, NID, Department;
            //  Double Basic, MedicalA, TiffinA, TransportA, WorkingH, Overtime, LeaveH, PFL, RevenueS, UnionF;
    
            count = stmt.executeUpdate("update labour_info set Name='" + Name + "', NID='" + NID + "',Department='" + Department + "', Basic='" + sBasic + "',UnionF='" + sUnionF + "',RevenueS='" + sRevenueS + "',"
                    + "MedicalA='" + sMedicalA + "', TiffinA='" + sTiffinA + "',TransportA='" + sTransportA + "' where id='" + ID + "' ");
            if (count > 0) {
//                System.out.println("inserted successfully");
                JOptionPane.showMessageDialog(this, "Updated successfully");
//                clear();
//                displayInTable();
            } else {
//                System.out.println("insertion failed");
                JOptionPane.showMessageDialog(this, "Updated failed", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                //Close the connection and statement object
                con.close();
                stmt.close();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }
}



}

